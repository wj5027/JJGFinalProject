<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="CouponAdmin">
  	<resultMap type="com.kh.tsp.admin.model.vo.CouponRequestList" id="CouponAdminResultSet">
  		<id property="reqNo" column="COUPON_REQ_NO"/>
  		<result property="couponName" column="COUPON_NAME"/>
  		<result property="couponType" column="COUPON_TYPE"/>
  		<result property="couponStartDate" column="COUPON_START_DATE"/>
  		<result property="couponEndDate" column="COUPON_END_DATE"/>
  		<result property="amount" column="AMOUNT"/>
  		<result property="remark" column="REMARK"/>
  		<result property="memberNo" column="MEMBER_NO"/>
  		<result property="parkingNo" column="PARKING_NO"/>
  		<result property="refuseReason" column="REFUSE_REASON"/>
  		<result property="couponOdiscount" column="COUPON_ODISCOUNT"/>
  		<result property="couponPdiscount" column="COUPON_PDISCOUNT"/>
  		<result property="couponReqStatus" column="COUPON_REQ_STATUS"/>
  		<result property="parkingName" column="PARKING_NAME"/>
  		<result property="memberId" column="MEMBER_ID"/>
  	</resultMap>
  	
	<!-- 쿠폰 전체 수 -->
  	<select id="getListCount" resultType="_int">
  		SELECT COUNT(*)
		FROM COUPON_REQUEST_LIST
  	</select>
  	
  	<!-- 쿠폰 전체 리스트 -->
  	<select id="selectCouponList" resultMap="CouponAdminResultSet">
  		SELECT CRL.COUPON_REQ_NO, CRL.COUPON_NAME, CRL.COUPON_TYPE, CRL.COUPON_START_DATE, 
		            CRL.COUPON_END_DATE, CRL.AMOUNT, CRL.REMARK, CRL.MEMBER_NO, CRL.PARKING_NO, CRL.REFUSE_REASON, 
		            CRL.COUPON_ODISCOUNT, CRL.COUPON_PDISCOUNT, CRL.COUPON_REQ_STATUS, M.MEMBER_ID, P.PARKING_NAME
		FROM COUPON_REQUEST_LIST CRL
		INNER JOIN MEMBER M ON (CRL.MEMBER_NO = M.MEMBER_NO)
		INNER JOIN PARKING P ON (CRL.PARKING_NO = P.PARKING_NO)
  		ORDER BY COUPON_REQ_NO DESC
  	</select>
  	
  	<!-- 쿠폰 발급 -->
  	<update id="updateCoupon"  parameterType="_int">
  		UPDATE COUPON_REQUEST_LIST
		SET COUPON_REQ_STATUS = '발급완료'
		WHERE COUPON_REQ_NO =  #{reqNo}
  	</update>
  	
  	<!-- 쿠폰 반송 -->
  	<update id="deleteCoupon"  parameterType="CouponAdmin">
  		UPDATE COUPON_REQUEST_LIST
		SET COUPON_REQ_STATUS = '반송', REFUSE_REASON = #{refuseReason}
		WHERE COUPON_REQ_NO = #{reqNo}
  	</update>
  	
  	<!-- 반송 사유 ajax -->
  	<select id="selectRefuseReason" resultMap="CouponAdminResultSet" parameterType="_int">
  		SELECT CRL.COUPON_REQ_NO, CRL.COUPON_NAME, CRL.COUPON_TYPE, CRL.COUPON_START_DATE, 
		            CRL.COUPON_END_DATE, CRL.AMOUNT, CRL.REMARK, CRL.MEMBER_NO, CRL.PARKING_NO, CRL.REFUSE_REASON, 
		            CRL.COUPON_ODISCOUNT, CRL.COUPON_PDISCOUNT, CRL.COUPON_REQ_STATUS, M.MEMBER_ID, P.PARKING_NAME
		FROM COUPON_REQUEST_LIST CRL
		INNER JOIN MEMBER M ON (CRL.MEMBER_NO = M.MEMBER_NO)
		INNER JOIN PARKING P ON (CRL.PARKING_NO = P.PARKING_NO)
  		WHERE CRL.COUPON_REQ_NO = #{reqNo}
  	</select>
  	
  	<!-- 
  	문의게시판 삭제
  	<update id="deleteBoardQnA"  parameterType="_int">
  		UPDATE BOARD
  		SET STATUS = 'N'
  		WHERE STATUS='Y' AND BOARD_NO = #{boardNo}
  	</update>
  	
  	문의게시판 복구
  	<update id="updateRecoverBoardQnA"  parameterType="_int">
  		UPDATE BOARD
  		SET STATUS = 'Y'
  		WHERE STATUS='N' AND BOARD_NO = #{boardNo}
  	</update>
  	
	문의게시판 검색 수
  	<select id="getSearchListCount" resultType="_int" parameterType="java.util.Map">
  		SELECT COUNT(*) 
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN REPLY R ON(B.BOARD_NO = R.BOARD_NO)
  		WHERE B.BOARD_TYPE = '관리자문의'
		<if test="selectStatus!='' and (selectStatus eq 'A'.toString())">
			AND (R.CANCEL_YN = 'Y' OR R.CANCEL_YN IS NULL)
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'Y'.toString())">
			AND R.CANCEL_YN = 'Y'
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'N'.toString())">
			AND R.CANCEL_YN IS NULL
		</if>
		<if test="mId != ''">
			AND M.MEMBER_ID LIKE '%'||#{mId}||'%'
		</if>
		<if test="bTitle != ''">
			AND B.BOARD_TITLE LIKE '%'||#{bTitle}||'%'
		</if>
		<if test="today != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') >= TO_CHAR(TO_DATE(#{today},'yyyy/mm/dd'), 'yyyy/mm/dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') <= TO_CHAR(TO_DATE(SYSDATE,'rrrr/mm/dd'), 'yyyy/mm/dd'))
		]]>		
		</if>
		<if test="startDate != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') >= TO_CHAR(TO_DATE(#{startDate},'yyyy-mm-dd'),'yyyy-mm-dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') <= TO_CHAR(TO_DATE(#{endDate},'yyyy-mm-dd'),'yyyy-mm-dd'))
		]]>		
		</if>
  	</select>
  	
  	문의 게시판 검색 결과
  	<select id="selectSearchBoardQnAList" resultMap="BoardAdminResultSet" parameterType="java.util.Map">		
  		SELECT M.MEMBER_NO, M.MEMBER_ID, B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTEXT, B.BOARD_VIEWS, B.CREATION_DATE, B.MODIFIED_DATE, B.BOARD_TYPE, B.STATUS, R.CANCEL_YN, R.REPLY_CONTEXT
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN REPLY R ON(B.BOARD_NO = R.BOARD_NO)
  		WHERE B.BOARD_TYPE = '관리자문의'
		<if test="selectStatus!='' and (selectStatus eq 'A'.toString())">
			AND (R.CANCEL_YN = 'Y' OR R.CANCEL_YN IS NULL)
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'Y'.toString())">
			AND R.CANCEL_YN = 'Y'
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'N'.toString())">
			AND R.CANCEL_YN IS NULL
		</if>
		<if test="mId != ''">
			AND M.MEMBER_ID LIKE '%'||#{mId}||'%'
		</if>
		<if test="bTitle != ''">
			AND B.BOARD_TITLE LIKE '%'||#{bTitle}||'%'
		</if>
		<if test="today != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') >= TO_CHAR(TO_DATE(#{today},'yyyy/mm/dd'), 'yyyy/mm/dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') <= TO_CHAR(TO_DATE(SYSDATE,'rrrr/mm/dd'), 'yyyy/mm/dd'))
		]]>		
		</if>
		<if test="startDate != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') >= TO_CHAR(TO_DATE(#{startDate},'yyyy-mm-dd'),'yyyy-mm-dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') <= TO_CHAR(TO_DATE(#{endDate},'yyyy-mm-dd'),'yyyy-mm-dd'))
		]]>		
		</if>
		ORDER BY B.BOARD_NO DESC
  	</select>
  	  	
  	문의 게시판 답변 ajax
  	<select id="answerBoardQnA" resultMap="BoardAdminResultSet" parameterType="_int">
		SELECT M.MEMBER_NO, M.MEMBER_ID, B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTEXT, B.BOARD_VIEWS, B.CREATION_DATE, B.MODIFIED_DATE, B.BOARD_TYPE, B.STATUS, R.CANCEL_YN, R.REPLY_CONTEXT, R.REPLY_NO
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN REPLY R ON(B.BOARD_NO = R.BOARD_NO)
  		WHERE B.BOARD_TYPE = '관리자문의'
  			AND B.BOARD_NO = #{bno}
  	</select>
  	
  	답변 작성
  	<insert id="insertAnswerBoard" parameterType="java.util.Map">	
  		INSERT INTO REPLY VALUES(REPLY_NO_SEQ.NEXTVAL, #{textareaId}, SYSDATE, 'Y', NULL, #{bno}, #{mno})
  	</insert>  	
  	
  	답변 작성
  	<update id="updateAnswerBoard" parameterType="java.util.Map">	
  		UPDATE REPLY
  		SET REPLY_CONTEXT = #{updateTextareaId}
  		WHERE REPLY_NO = #{replyNo}
  	</update>
  	
  	
  	
  	
	후기게시판 전체 수
  	<select id="getReviewListCount" resultType="_int">
  		SELECT COUNT(*) 
		FROM BOARD
		WHERE BOARD_TYPE = '후기'
  	</select>
  	
  	후기게시판 전체 리스트
  	<select id="selectBoardReviewList" resultMap="BoardAdminResultSet">
  		SELECT M.MEMBER_NO, M.MEMBER_ID, B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTEXT, B.BOARD_VIEWS, B.CREATION_DATE, B.MODIFIED_DATE, B.BOARD_TYPE, B.STATUS, P.PARKING_NAME, P.ROAD_ADDRESS, P.PARKING_SIZE
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN PARKING P ON(P.PARKING_NO = B.PARKING_NO)
  		WHERE B.BOARD_TYPE = '후기'
  		ORDER BY BOARD_NO DESC
  	</select>
  	  	
  	문의 게시판 답변 ajax
  	<select id="detailBoardReview" resultMap="BoardAdminResultSet" parameterType="_int">
  		SELECT M.MEMBER_NO, M.MEMBER_ID, B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTEXT, B.BOARD_VIEWS, B.CREATION_DATE, B.MODIFIED_DATE, B.BOARD_TYPE, B.STATUS, P.PARKING_NAME, P.ROAD_ADDRESS, P.PARKING_SIZE
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN PARKING P ON(P.PARKING_NO = B.PARKING_NO)
  		WHERE B.BOARD_TYPE = '후기'
  			AND B.BOARD_NO = #{bno}
  	</select>
  	  	
  	문의게시판 삭제
  	<update id="deleteBoardReview"  parameterType="_int">
  		UPDATE BOARD
  		SET STATUS = 'N'
  		WHERE STATUS='Y' AND BOARD_NO = #{boardNo}
  	</update>
  	
  	문의게시판 복구
  	<update id="updateRecoverBoardReview"  parameterType="_int">
  		UPDATE BOARD
  		SET STATUS = 'Y'
  		WHERE STATUS='N' AND BOARD_NO = #{boardNo}
  	</update>
  	
	후기 게시판 검색 수
  	<select id="getSearchReviewListCount" resultType="_int" parameterType="java.util.Map">
  		SELECT COUNT(*) 
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN PARKING P ON(P.PARKING_NO = B.PARKING_NO)
  		WHERE B.BOARD_TYPE = '후기'
		<if test="selectStatus!='' and (selectStatus eq 'A'.toString())">
			AND B.STATUS IN('Y','N')
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'Y'.toString())">
			AND B.STATUS = 'Y'
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'N'.toString())">
			AND B.STATUS = 'N'
		</if>
		<if test="mId != ''">
			AND M.MEMBER_ID LIKE '%'||#{mId}||'%'
		</if>
		<if test="parkingName != ''">
			AND P.PARKING_NAME LIKE '%'||#{parkingName}||'%'
		</if>
		<if test="bTitle != ''">
			AND B.BOARD_TITLE LIKE '%'||#{bTitle}||'%'
		</if>
		<if test="today != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') >= TO_CHAR(TO_DATE(#{today},'yyyy/mm/dd'), 'yyyy/mm/dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') <= TO_CHAR(TO_DATE(SYSDATE,'rrrr/mm/dd'), 'yyyy/mm/dd'))
		]]>		
		</if>
		<if test="startDate != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') >= TO_CHAR(TO_DATE(#{startDate},'yyyy-mm-dd'),'yyyy-mm-dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') <= TO_CHAR(TO_DATE(#{endDate},'yyyy-mm-dd'),'yyyy-mm-dd'))
		]]>		
		</if>
  	</select>
  	
  	후기 게시판 검색 결과
  	<select id="selectSearchBoardReviewList" resultMap="BoardAdminResultSet" parameterType="java.util.Map">		
  		SELECT M.MEMBER_NO, M.MEMBER_ID, B.BOARD_NO, B.BOARD_TITLE, B.BOARD_CONTEXT, B.BOARD_VIEWS, B.CREATION_DATE, B.MODIFIED_DATE, B.BOARD_TYPE, B.STATUS, P.PARKING_NAME, P.ROAD_ADDRESS, P.PARKING_SIZE
  		FROM BOARD B
  		INNER JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
        LEFT OUTER JOIN PARKING P ON(P.PARKING_NO = B.PARKING_NO)
  		WHERE B.BOARD_TYPE = '후기'
		<if test="selectStatus!='' and (selectStatus eq 'A'.toString())">
			AND B.STATUS IN('Y','N')
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'Y'.toString())">
			AND B.STATUS = 'Y'
		</if>
		<if test="selectStatus!='' and (selectStatus eq 'N'.toString())">
			AND B.STATUS = 'N'
		</if>
		<if test="mId != ''">
			AND M.MEMBER_ID LIKE '%'||#{mId}||'%'
		</if>
		<if test="parkingName != ''">
			AND P.PARKING_NAME LIKE '%'||#{parkingName}||'%'
		</if>
		<if test="bTitle != ''">
			AND B.BOARD_TITLE LIKE '%'||#{bTitle}||'%'
		</if>
		<if test="today != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') >= TO_CHAR(TO_DATE(#{today},'yyyy/mm/dd'), 'yyyy/mm/dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr/mm/dd'), 'yyyy/mm/dd') <= TO_CHAR(TO_DATE(SYSDATE,'rrrr/mm/dd'), 'yyyy/mm/dd'))
		]]>		
		</if>
		<if test="startDate != ''">
		<![CDATA[
			AND (TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') >= TO_CHAR(TO_DATE(#{startDate},'yyyy-mm-dd'),'yyyy-mm-dd') 
					AND TO_CHAR(TO_DATE(B.CREATION_DATE,'rrrr-mm-dd'),'yyyy-mm-dd') <= TO_CHAR(TO_DATE(#{endDate},'yyyy-mm-dd'),'yyyy-mm-dd'))
		]]>		
		</if>
		ORDER BY B.BOARD_NO DESC
  	</select>
  	 -->
  	
  	
  	
  </mapper>